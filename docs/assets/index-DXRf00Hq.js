(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const i=document.getElementById("showcase");i.addEventListener("load",async()=>{try{const o=await i.contentWindow.MP_SDK.connect(i.contentWindow);console.log("SDK Connected:",o);const[r]=await o.Scene.createObjects(1),s=r.addNode(),c=5,e=10,t=32,n=1,a=new THREE.ConeGeometry(c,e,t,n),d=new THREE.MeshBasicMaterial({color:16776960,opacity:.5,transparent:!0,side:THREE.DoubleSide});s.addComponent("mp.mesh",{geometry:a,material:d,position:{x:0,y:1.5,z:0},rotation:{x:-90,y:0,z:0},scale:{x:1,y:1,z:1}}),s.start(),console.log("FOV cone added!")}catch(o){console.error("Error:",o)}});
