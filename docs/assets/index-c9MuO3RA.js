(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();const i=document.getElementById("showcase");i.addEventListener("load",async()=>{try{const r=await i.contentWindow.MP_SDK.connect(i.contentWindow),o=r.Bundle.Three;console.log("SDK Connected:",r);const[c]=await r.Scene.createObjects(1),n=c.addNode(),e=5,t=10,s=32,a=1,d=new o.ConeGeometry(e,t,s,a),l=new o.MeshBasicMaterial({color:16776960,opacity:.5,transparent:!0,side:o.DoubleSide});n.addComponent("mp.mesh",{geometry:d,material:l,position:{x:0,y:1.5,z:0},rotation:{x:-90,y:0,z:0},scale:{x:1,y:1,z:1}}),n.start(),console.log("FOV cone added!")}catch(r){console.error("Error:",r)}});
